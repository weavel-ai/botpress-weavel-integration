import { AxiosInstance } from 'axios';
import { Configuration, DefaultApiCreateConversationRequest, DefaultApiGetConversationRequest, DefaultApiListConversationsRequest, DefaultApiGetOrCreateConversationRequest, DefaultApiUpdateConversationRequest, DefaultApiDeleteConversationRequest, DefaultApiListParticipantsRequest, DefaultApiAddParticipantRequest, DefaultApiGetParticipantRequest, DefaultApiRemoveParticipantRequest, DefaultApiCreateEventRequest, DefaultApiGetEventRequest, DefaultApiListEventsRequest, DefaultApiCreateMessageRequest, DefaultApiGetOrCreateMessageRequest, DefaultApiGetMessageRequest, DefaultApiUpdateMessageRequest, DefaultApiListMessagesRequest, DefaultApiDeleteMessageRequest, DefaultApiCreateUserRequest, DefaultApiGetUserRequest, DefaultApiListUsersRequest, DefaultApiGetOrCreateUserRequest, DefaultApiUpdateUserRequest, DefaultApiDeleteUserRequest, DefaultApiGetStateRequest, DefaultApiSetStateRequest, DefaultApiGetOrSetStateRequest, DefaultApiPatchStateRequest, DefaultApiCallActionRequest, DefaultApiConfigureIntegrationRequest, DefaultApiGetTaskRequest, DefaultApiCreateTaskRequest, DefaultApiUpdateTaskRequest, DefaultApiDeleteTaskRequest, DefaultApiListTasksRequest, DefaultApiRunVrlRequest, DefaultApiUpdateAccountRequest, DefaultApiCreatePersonalAccessTokenRequest, DefaultApiDeletePersonalAccessTokenRequest, DefaultApiSetAccountPreferenceRequest, DefaultApiGetAccountPreferenceRequest, DefaultApiListPublicIntegrationsRequest, DefaultApiGetPublicIntegrationByIdRequest, DefaultApiGetPublicIntegrationRequest, DefaultApiCreateBotRequest, DefaultApiUpdateBotRequest, DefaultApiTransferBotRequest, DefaultApiListBotsRequest, DefaultApiGetBotRequest, DefaultApiDeleteBotRequest, DefaultApiGetBotLogsRequest, DefaultApiGetBotWebchatRequest, DefaultApiGetBotAnalyticsRequest, DefaultApiListBotIssuesRequest, DefaultApiDeleteBotIssueRequest, DefaultApiListBotIssueEventsRequest, DefaultApiSetWorkspacePaymentMethodRequest, DefaultApiListWorkspaceInvoicesRequest, DefaultApiGetUpcomingInvoiceRequest, DefaultApiChargeWorkspaceUnpaidInvoicesRequest, DefaultApiCreateWorkspaceRequest, DefaultApiGetPublicWorkspaceRequest, DefaultApiGetWorkspaceRequest, DefaultApiListWorkspaceUsagesRequest, DefaultApiBreakDownWorkspaceUsageByBotRequest, DefaultApiGetWorkspaceQuotaRequest, DefaultApiListWorkspaceQuotasRequest, DefaultApiUpdateWorkspaceRequest, DefaultApiCheckHandleAvailabilityRequest, DefaultApiListWorkspacesRequest, DefaultApiChangeWorkspacePlanRequest, DefaultApiDeleteWorkspaceRequest, DefaultApiGetAuditRecordsRequest, DefaultApiListWorkspaceMembersRequest, DefaultApiDeleteWorkspaceMemberRequest, DefaultApiCreateWorkspaceMemberRequest, DefaultApiUpdateWorkspaceMemberRequest, DefaultApiListIntegrationApiKeysRequest, DefaultApiCreateIntegrationApiKeyRequest, DefaultApiDeleteIntegrationApiKeyRequest, DefaultApiCreateIntegrationRequest, DefaultApiUpdateIntegrationRequest, DefaultApiListIntegrationsRequest, DefaultApiGetIntegrationRequest, DefaultApiGetIntegrationLogsRequest, DefaultApiGetIntegrationByNameRequest, DefaultApiDeleteIntegrationRequest, DefaultApiGetUsageRequest, DefaultApiListUsageHistoryRequest, DefaultApiChangeAISpendQuotaRequest, DefaultApiListActivitiesRequest, DefaultApiIntrospectRequest, DefaultApiCreateFileRequest, DefaultApiDeleteFileRequest, DefaultApiListFilesRequest, DefaultApiGetFileMetadataRequest, DefaultApiGetFileContentRequest, DefaultApiUpdateFileMetadataRequest, DefaultApiSearchFilesRequest, DefaultApiListTablesRequest, DefaultApiGetTableRequest, DefaultApiGetOrCreateTableRequest, DefaultApiCreateTableRequest, DefaultApiDuplicateTableRequest, DefaultApiUpdateTableRequest, DefaultApiRenameTableColumnRequest, DefaultApiDeleteTableRequest, DefaultApiGetTableRowRequest, DefaultApiFindTableRowsRequest, DefaultApiCreateTableRowsRequest, DefaultApiDeleteTableRowsRequest, DefaultApiUpdateTableRowsRequest, DefaultApiUpsertTableRowsRequest } from '.';
type SimplifyOptions = {
    deep?: boolean;
};
type Flatten<AnyType, Options extends SimplifyOptions = {}> = Options['deep'] extends true ? {
    [KeyType in keyof AnyType]: Simplify<AnyType[KeyType], Options>;
} : {
    [KeyType in keyof AnyType]: AnyType[KeyType];
};
type Simplify<AnyType, Options extends SimplifyOptions = {}> = Flatten<AnyType> extends AnyType ? Flatten<AnyType, Options> : AnyType;
type Merge_<FirstType, SecondType> = Except<FirstType, Extract<keyof FirstType, keyof SecondType>> & SecondType;
type IsEqual<T, U> = (<G>() => G extends T ? 1 : 2) extends (<G>() => G extends U ? 1 : 2) ? true : false;
type Filter<KeyType, ExcludeType> = IsEqual<KeyType, ExcludeType> extends true ? never : (KeyType extends ExcludeType ? never : KeyType);
type Merge<FirstType, SecondType> = Simplify<Merge_<FirstType, SecondType>>;
type Except<ObjectType, KeysType extends keyof ObjectType> = {
    [KeyType in keyof ObjectType as Filter<KeyType, KeysType>]: ObjectType[KeyType];
};
export declare class ApiClient {
    private _innerClient;
    constructor(configuration?: Configuration, basePath?: string, axiosInstance?: AxiosInstance);
    createConversation: (createConversationBody: CreateConversationProps) => Promise<import("./api").CreateConversationResponse>;
    getConversation: (props: GetConversationProps) => Promise<import("./api").GetConversationResponse>;
    listConversations: (props: ListConversationsProps) => Promise<import("./api").ListConversationsResponse>;
    getOrCreateConversation: (getOrCreateConversationBody: GetOrCreateConversationProps) => Promise<import("./api").GetOrCreateConversationResponse>;
    updateConversation: ({ id, ...updateConversationBody }: UpdateConversationProps) => Promise<import("./api").UpdateConversationResponse>;
    deleteConversation: (props: DeleteConversationProps) => Promise<object>;
    listParticipants: (props: ListParticipantsProps) => Promise<import("./api").ListParticipantsResponse>;
    addParticipant: ({ id, ...addParticipantBody }: AddParticipantProps) => Promise<import("./api").AddParticipantResponse>;
    getParticipant: (props: GetParticipantProps) => Promise<import("./api").GetParticipantResponse>;
    removeParticipant: (props: RemoveParticipantProps) => Promise<object>;
    createEvent: (createEventBody: CreateEventProps) => Promise<import("./api").CreateEventResponse>;
    getEvent: (props: GetEventProps) => Promise<import("./api").GetEventResponse>;
    listEvents: (props: ListEventsProps) => Promise<import("./api").ListEventsResponse>;
    createMessage: (createMessageBody: CreateMessageProps) => Promise<import("./api").CreateMessageResponse>;
    getOrCreateMessage: (getOrCreateMessageBody: GetOrCreateMessageProps) => Promise<import("./api").GetOrCreateMessageResponse>;
    getMessage: (props: GetMessageProps) => Promise<import("./api").GetMessageResponse>;
    updateMessage: ({ id, ...updateMessageBody }: UpdateMessageProps) => Promise<import("./api").UpdateMessageResponse>;
    listMessages: (props: ListMessagesProps) => Promise<import("./api").ListMessagesResponse>;
    deleteMessage: (props: DeleteMessageProps) => Promise<object>;
    createUser: (createUserBody: CreateUserProps) => Promise<import("./api").CreateUserResponse>;
    getUser: (props: GetUserProps) => Promise<import("./api").GetUserResponse>;
    listUsers: (props: ListUsersProps) => Promise<import("./api").ListUsersResponse>;
    getOrCreateUser: (getOrCreateUserBody: GetOrCreateUserProps) => Promise<import("./api").GetOrCreateUserResponse>;
    updateUser: ({ id, ...updateUserBody }: UpdateUserProps) => Promise<import("./api").UpdateUserResponse>;
    deleteUser: (props: DeleteUserProps) => Promise<object>;
    getState: (props: GetStateProps) => Promise<import("./api").GetStateResponse>;
    setState: ({ type, id, name, ...setStateBody }: SetStateProps) => Promise<import("./api").SetStateResponse>;
    getOrSetState: ({ type, id, name, ...getOrSetStateBody }: GetOrSetStateProps) => Promise<import("./api").GetOrSetStateResponse>;
    patchState: ({ type, id, name, ...patchStateBody }: PatchStateProps) => Promise<import("./api").PatchStateResponse>;
    callAction: (callActionBody: CallActionProps) => Promise<import("./api").CallActionResponse>;
    configureIntegration: (configureIntegrationBody: ConfigureIntegrationProps) => Promise<object>;
    getTask: (props: GetTaskProps) => Promise<import("./api").GetTaskResponse>;
    createTask: (createTaskBody: CreateTaskProps) => Promise<import("./api").CreateTaskResponse>;
    updateTask: ({ id, ...updateTaskBody }: UpdateTaskProps) => Promise<import("./api").UpdateTaskResponse>;
    deleteTask: (props: DeleteTaskProps) => Promise<object>;
    listTasks: (props: ListTasksProps) => Promise<import("./api").ListTasksResponse>;
    runVrl: (runVrlBody: RunVrlProps) => Promise<import("./api").RunVrlResponse>;
    getAccount: () => Promise<import("./api").GetAccountResponse>;
    updateAccount: (updateAccountBody: UpdateAccountProps) => Promise<import("./api").UpdateAccountResponse>;
    listPersonalAccessTokens: () => Promise<import("./api").ListPersonalAccessTokensResponse>;
    createPersonalAccessToken: (createPersonalAccessTokenBody: CreatePersonalAccessTokenProps) => Promise<import("./api").CreatePersonalAccessTokenResponse>;
    deletePersonalAccessToken: (props: DeletePersonalAccessTokenProps) => Promise<object>;
    setAccountPreference: ({ key, ...setAccountPreferenceBody }: SetAccountPreferenceProps) => Promise<object>;
    getAccountPreference: (props: GetAccountPreferenceProps) => Promise<import("./api").GetAccountPreferenceResponse>;
    listPublicIntegrations: (props: ListPublicIntegrationsProps) => Promise<import("./api").ListPublicIntegrationsResponse>;
    getPublicIntegrationById: (props: GetPublicIntegrationByIdProps) => Promise<import("./api").GetPublicIntegrationByIdResponse>;
    getPublicIntegration: (props: GetPublicIntegrationProps) => Promise<import("./api").GetPublicIntegrationResponse>;
    createBot: (createBotBody: CreateBotProps) => Promise<import("./api").CreateBotResponse>;
    updateBot: ({ id, ...updateBotBody }: UpdateBotProps) => Promise<import("./api").UpdateBotResponse>;
    transferBot: ({ id, ...transferBotBody }: TransferBotProps) => Promise<object>;
    listBots: (props: ListBotsProps) => Promise<import("./api").ListBotsResponse>;
    getBot: (props: GetBotProps) => Promise<import("./api").GetBotResponse>;
    deleteBot: (props: DeleteBotProps) => Promise<object>;
    getBotLogs: (props: GetBotLogsProps) => Promise<import("./api").GetBotLogsResponse>;
    getBotWebchat: (props: GetBotWebchatProps) => Promise<import("./api").GetBotWebchatResponse>;
    getBotAnalytics: (props: GetBotAnalyticsProps) => Promise<import("./api").GetBotAnalyticsResponse>;
    listBotIssues: (props: ListBotIssuesProps) => Promise<import("./api").ListBotIssuesResponse>;
    deleteBotIssue: (props: DeleteBotIssueProps) => Promise<object>;
    listBotIssueEvents: (props: ListBotIssueEventsProps) => Promise<import("./api").ListBotIssueEventsResponse>;
    setWorkspacePaymentMethod: ({ id, ...setWorkspacePaymentMethodBody }: SetWorkspacePaymentMethodProps) => Promise<import("./api").SetWorkspacePaymentMethodResponse>;
    listWorkspaceInvoices: (props: ListWorkspaceInvoicesProps) => Promise<import("./api").ListWorkspaceInvoicesResponse>;
    getUpcomingInvoice: (props: GetUpcomingInvoiceProps) => Promise<import("./api").GetUpcomingInvoiceResponse>;
    chargeWorkspaceUnpaidInvoices: ({ id, ...chargeWorkspaceUnpaidInvoicesBody }: ChargeWorkspaceUnpaidInvoicesProps) => Promise<import("./api").ChargeWorkspaceUnpaidInvoicesResponse>;
    createWorkspace: (createWorkspaceBody: CreateWorkspaceProps) => Promise<import("./api").CreateWorkspaceResponse>;
    getPublicWorkspace: (props: GetPublicWorkspaceProps) => Promise<import("./api").GetPublicWorkspaceResponse>;
    getWorkspace: (props: GetWorkspaceProps) => Promise<import("./api").GetWorkspaceResponse>;
    listWorkspaceUsages: (props: ListWorkspaceUsagesProps) => Promise<import("./api").ListWorkspaceUsagesResponse>;
    breakDownWorkspaceUsageByBot: (props: BreakDownWorkspaceUsageByBotProps) => Promise<import("./api").BreakDownWorkspaceUsageByBotResponse>;
    getAllWorkspaceQuotaCompletion: () => Promise<{
        [key: string]: import("./api").GetAllWorkspaceQuotaCompletionResponse;
    }>;
    getWorkspaceQuota: (props: GetWorkspaceQuotaProps) => Promise<import("./api").GetWorkspaceQuotaResponse>;
    listWorkspaceQuotas: (props: ListWorkspaceQuotasProps) => Promise<import("./api").ListWorkspaceQuotasResponse>;
    updateWorkspace: ({ id, ...updateWorkspaceBody }: UpdateWorkspaceProps) => Promise<import("./api").UpdateWorkspaceResponse1>;
    checkHandleAvailability: (checkHandleAvailabilityBody: CheckHandleAvailabilityProps) => Promise<import("./api").CheckHandleAvailabilityResponse>;
    listWorkspaces: (props: ListWorkspacesProps) => Promise<import("./api").ListWorkspacesResponse>;
    changeWorkspacePlan: ({ id, ...changeWorkspacePlanBody }: ChangeWorkspacePlanProps) => Promise<import("./api").ChangeWorkspacePlanResponse>;
    deleteWorkspace: (props: DeleteWorkspaceProps) => Promise<object>;
    getAuditRecords: (props: GetAuditRecordsProps) => Promise<import("./api").GetAuditRecordsResponse>;
    listWorkspaceMembers: (props: ListWorkspaceMembersProps) => Promise<import("./api").ListWorkspaceMembersResponse>;
    deleteWorkspaceMember: (props: DeleteWorkspaceMemberProps) => Promise<object>;
    createWorkspaceMember: (createWorkspaceMemberBody: CreateWorkspaceMemberProps) => Promise<import("./api").CreateWorkspaceMemberResponse>;
    updateWorkspaceMember: ({ id, ...updateWorkspaceMemberBody }: UpdateWorkspaceMemberProps) => Promise<import("./api").UpdateWorkspaceMemberResponse>;
    listIntegrationApiKeys: (props: ListIntegrationApiKeysProps) => Promise<import("./api").ListIntegrationApiKeysResponse>;
    createIntegrationApiKey: (createIntegrationApiKeyBody: CreateIntegrationApiKeyProps) => Promise<import("./api").CreateIntegrationApiKeyResponse>;
    deleteIntegrationApiKey: (props: DeleteIntegrationApiKeyProps) => Promise<object>;
    createIntegration: (createIntegrationBody: CreateIntegrationProps) => Promise<import("./api").CreateIntegrationResponse>;
    updateIntegration: ({ id, ...updateIntegrationBody }: UpdateIntegrationProps) => Promise<import("./api").UpdateIntegrationResponse>;
    listIntegrations: (props: ListIntegrationsProps) => Promise<import("./api").ListIntegrationsResponse>;
    getIntegration: (props: GetIntegrationProps) => Promise<import("./api").GetIntegrationResponse>;
    getIntegrationLogs: (props: GetIntegrationLogsProps) => Promise<import("./api").GetIntegrationLogsResponse>;
    getIntegrationByName: (props: GetIntegrationByNameProps) => Promise<import("./api").GetIntegrationByNameResponse>;
    deleteIntegration: (props: DeleteIntegrationProps) => Promise<object>;
    getUsage: (props: GetUsageProps) => Promise<import("./api").GetUsageResponse>;
    listUsageHistory: (props: ListUsageHistoryProps) => Promise<import("./api").ListUsageHistoryResponse>;
    changeAISpendQuota: (changeAISpendQuotaBody: ChangeAISpendQuotaProps) => Promise<object>;
    listActivities: (props: ListActivitiesProps) => Promise<import("./api").ListActivitiesResponse>;
    introspect: (introspectBody: IntrospectProps) => Promise<import("./api").IntrospectResponse>;
    createFile: ({ xName, xTags, xAccessPolicies, xIndex, contentType, contentLength, ...createFileBody }: CreateFileProps) => Promise<import("./api").CreateFileResponse>;
    deleteFile: (props: DeleteFileProps) => Promise<object>;
    listFiles: (props: ListFilesProps) => Promise<import("./api").ListFilesResponse>;
    getFileMetadata: (props: GetFileMetadataProps) => Promise<import("./api").GetFileMetadataResponse>;
    getFileContent: (props: GetFileContentProps) => Promise<import("./api").GetFileContentResponse>;
    updateFileMetadata: ({ id, ...updateFileMetadataBody }: UpdateFileMetadataProps) => Promise<import("./api").UpdateFileMetadataResponse>;
    searchFiles: (props: SearchFilesProps) => Promise<import("./api").SearchFilesResponse>;
    listTables: (props: ListTablesProps) => Promise<import("./api").ListTablesResponse>;
    getTable: (props: GetTableProps) => Promise<import("./api").GetTableResponse>;
    getOrCreateTable: ({ table, ...getOrCreateTableBody }: GetOrCreateTableProps) => Promise<import("./api").GetOrCreateTableResponse>;
    createTable: (createTableBody: CreateTableProps) => Promise<import("./api").CreateTableResponse>;
    duplicateTable: ({ sourceTableId, ...duplicateTableBody }: DuplicateTableProps) => Promise<import("./api").DuplicateTableResponse>;
    updateTable: ({ table, ...updateTableBody }: UpdateTableProps) => Promise<import("./api").UpdateTableResponse>;
    renameTableColumn: ({ table, ...renameTableColumnBody }: RenameTableColumnProps) => Promise<import("./api").RenameTableColumnResponse>;
    deleteTable: (props: DeleteTableProps) => Promise<object>;
    getTableRow: (props: GetTableRowProps) => Promise<import("./api").GetTableRowResponse>;
    findTableRows: ({ table, ...findTableRowsBody }: FindTableRowsProps) => Promise<import("./api").FindTableRowsResponse>;
    createTableRows: ({ table, ...createTableRowsBody }: CreateTableRowsProps) => Promise<import("./api").CreateTableRowsResponse>;
    deleteTableRows: ({ table, ...deleteTableRowsBody }: DeleteTableRowsProps) => Promise<import("./api").DeleteTableRowsResponse>;
    updateTableRows: ({ table, ...updateTableRowsBody }: UpdateTableRowsProps) => Promise<import("./api").UpdateTableRowsResponse>;
    upsertTableRows: ({ table, ...upsertTableRowsBody }: UpsertTableRowsProps) => Promise<import("./api").UpsertTableRowsResponse>;
}
export type CreateConversationProps = Merge<Except<DefaultApiCreateConversationRequest, 'createConversationBody'>, NonNullable<DefaultApiCreateConversationRequest['createConversationBody']>>;
export type GetConversationProps = Merge<DefaultApiGetConversationRequest, {}>;
export type ListConversationsProps = Merge<DefaultApiListConversationsRequest, {}>;
export type GetOrCreateConversationProps = Merge<Except<DefaultApiGetOrCreateConversationRequest, 'getOrCreateConversationBody'>, NonNullable<DefaultApiGetOrCreateConversationRequest['getOrCreateConversationBody']>>;
export type UpdateConversationProps = Merge<Except<DefaultApiUpdateConversationRequest, 'updateConversationBody'>, NonNullable<DefaultApiUpdateConversationRequest['updateConversationBody']>>;
export type DeleteConversationProps = Merge<DefaultApiDeleteConversationRequest, {}>;
export type ListParticipantsProps = Merge<DefaultApiListParticipantsRequest, {}>;
export type AddParticipantProps = Merge<Except<DefaultApiAddParticipantRequest, 'addParticipantBody'>, NonNullable<DefaultApiAddParticipantRequest['addParticipantBody']>>;
export type GetParticipantProps = Merge<DefaultApiGetParticipantRequest, {}>;
export type RemoveParticipantProps = Merge<DefaultApiRemoveParticipantRequest, {}>;
export type CreateEventProps = Merge<Except<DefaultApiCreateEventRequest, 'createEventBody'>, NonNullable<DefaultApiCreateEventRequest['createEventBody']>>;
export type GetEventProps = Merge<DefaultApiGetEventRequest, {}>;
export type ListEventsProps = Merge<DefaultApiListEventsRequest, {}>;
export type CreateMessageProps = Merge<Except<DefaultApiCreateMessageRequest, 'createMessageBody'>, NonNullable<DefaultApiCreateMessageRequest['createMessageBody']>>;
export type GetOrCreateMessageProps = Merge<Except<DefaultApiGetOrCreateMessageRequest, 'getOrCreateMessageBody'>, NonNullable<DefaultApiGetOrCreateMessageRequest['getOrCreateMessageBody']>>;
export type GetMessageProps = Merge<DefaultApiGetMessageRequest, {}>;
export type UpdateMessageProps = Merge<Except<DefaultApiUpdateMessageRequest, 'updateMessageBody'>, NonNullable<DefaultApiUpdateMessageRequest['updateMessageBody']>>;
export type ListMessagesProps = Merge<DefaultApiListMessagesRequest, {}>;
export type DeleteMessageProps = Merge<DefaultApiDeleteMessageRequest, {}>;
export type CreateUserProps = Merge<Except<DefaultApiCreateUserRequest, 'createUserBody'>, NonNullable<DefaultApiCreateUserRequest['createUserBody']>>;
export type GetUserProps = Merge<DefaultApiGetUserRequest, {}>;
export type ListUsersProps = Merge<DefaultApiListUsersRequest, {}>;
export type GetOrCreateUserProps = Merge<Except<DefaultApiGetOrCreateUserRequest, 'getOrCreateUserBody'>, NonNullable<DefaultApiGetOrCreateUserRequest['getOrCreateUserBody']>>;
export type UpdateUserProps = Merge<Except<DefaultApiUpdateUserRequest, 'updateUserBody'>, NonNullable<DefaultApiUpdateUserRequest['updateUserBody']>>;
export type DeleteUserProps = Merge<DefaultApiDeleteUserRequest, {}>;
export type GetStateProps = Merge<DefaultApiGetStateRequest, {}>;
export type SetStateProps = Merge<Except<DefaultApiSetStateRequest, 'setStateBody'>, NonNullable<DefaultApiSetStateRequest['setStateBody']>>;
export type GetOrSetStateProps = Merge<Except<DefaultApiGetOrSetStateRequest, 'getOrSetStateBody'>, NonNullable<DefaultApiGetOrSetStateRequest['getOrSetStateBody']>>;
export type PatchStateProps = Merge<Except<DefaultApiPatchStateRequest, 'patchStateBody'>, NonNullable<DefaultApiPatchStateRequest['patchStateBody']>>;
export type CallActionProps = Merge<Except<DefaultApiCallActionRequest, 'callActionBody'>, NonNullable<DefaultApiCallActionRequest['callActionBody']>>;
export type ConfigureIntegrationProps = Merge<Except<DefaultApiConfigureIntegrationRequest, 'configureIntegrationBody'>, NonNullable<DefaultApiConfigureIntegrationRequest['configureIntegrationBody']>>;
export type GetTaskProps = Merge<DefaultApiGetTaskRequest, {}>;
export type CreateTaskProps = Merge<Except<DefaultApiCreateTaskRequest, 'createTaskBody'>, NonNullable<DefaultApiCreateTaskRequest['createTaskBody']>>;
export type UpdateTaskProps = Merge<Except<DefaultApiUpdateTaskRequest, 'updateTaskBody'>, NonNullable<DefaultApiUpdateTaskRequest['updateTaskBody']>>;
export type DeleteTaskProps = Merge<DefaultApiDeleteTaskRequest, {}>;
export type ListTasksProps = Merge<DefaultApiListTasksRequest, {}>;
export type RunVrlProps = Merge<Except<DefaultApiRunVrlRequest, 'runVrlBody'>, NonNullable<DefaultApiRunVrlRequest['runVrlBody']>>;
export type UpdateAccountProps = Merge<Except<DefaultApiUpdateAccountRequest, 'updateAccountBody'>, NonNullable<DefaultApiUpdateAccountRequest['updateAccountBody']>>;
export type CreatePersonalAccessTokenProps = Merge<Except<DefaultApiCreatePersonalAccessTokenRequest, 'createPersonalAccessTokenBody'>, NonNullable<DefaultApiCreatePersonalAccessTokenRequest['createPersonalAccessTokenBody']>>;
export type DeletePersonalAccessTokenProps = Merge<DefaultApiDeletePersonalAccessTokenRequest, {}>;
export type SetAccountPreferenceProps = Merge<Except<DefaultApiSetAccountPreferenceRequest, 'setAccountPreferenceBody'>, NonNullable<DefaultApiSetAccountPreferenceRequest['setAccountPreferenceBody']>>;
export type GetAccountPreferenceProps = Merge<DefaultApiGetAccountPreferenceRequest, {}>;
export type ListPublicIntegrationsProps = Merge<DefaultApiListPublicIntegrationsRequest, {}>;
export type GetPublicIntegrationByIdProps = Merge<DefaultApiGetPublicIntegrationByIdRequest, {}>;
export type GetPublicIntegrationProps = Merge<DefaultApiGetPublicIntegrationRequest, {}>;
export type CreateBotProps = Merge<Except<DefaultApiCreateBotRequest, 'createBotBody'>, NonNullable<DefaultApiCreateBotRequest['createBotBody']>>;
export type UpdateBotProps = Merge<Except<DefaultApiUpdateBotRequest, 'updateBotBody'>, NonNullable<DefaultApiUpdateBotRequest['updateBotBody']>>;
export type TransferBotProps = Merge<Except<DefaultApiTransferBotRequest, 'transferBotBody'>, NonNullable<DefaultApiTransferBotRequest['transferBotBody']>>;
export type ListBotsProps = Merge<DefaultApiListBotsRequest, {}>;
export type GetBotProps = Merge<DefaultApiGetBotRequest, {}>;
export type DeleteBotProps = Merge<DefaultApiDeleteBotRequest, {}>;
export type GetBotLogsProps = Merge<DefaultApiGetBotLogsRequest, {}>;
export type GetBotWebchatProps = Merge<DefaultApiGetBotWebchatRequest, {}>;
export type GetBotAnalyticsProps = Merge<DefaultApiGetBotAnalyticsRequest, {}>;
export type ListBotIssuesProps = Merge<DefaultApiListBotIssuesRequest, {}>;
export type DeleteBotIssueProps = Merge<DefaultApiDeleteBotIssueRequest, {}>;
export type ListBotIssueEventsProps = Merge<DefaultApiListBotIssueEventsRequest, {}>;
export type SetWorkspacePaymentMethodProps = Merge<Except<DefaultApiSetWorkspacePaymentMethodRequest, 'setWorkspacePaymentMethodBody'>, NonNullable<DefaultApiSetWorkspacePaymentMethodRequest['setWorkspacePaymentMethodBody']>>;
export type ListWorkspaceInvoicesProps = Merge<DefaultApiListWorkspaceInvoicesRequest, {}>;
export type GetUpcomingInvoiceProps = Merge<DefaultApiGetUpcomingInvoiceRequest, {}>;
export type ChargeWorkspaceUnpaidInvoicesProps = Merge<Except<DefaultApiChargeWorkspaceUnpaidInvoicesRequest, 'chargeWorkspaceUnpaidInvoicesBody'>, NonNullable<DefaultApiChargeWorkspaceUnpaidInvoicesRequest['chargeWorkspaceUnpaidInvoicesBody']>>;
export type CreateWorkspaceProps = Merge<Except<DefaultApiCreateWorkspaceRequest, 'createWorkspaceBody'>, NonNullable<DefaultApiCreateWorkspaceRequest['createWorkspaceBody']>>;
export type GetPublicWorkspaceProps = Merge<DefaultApiGetPublicWorkspaceRequest, {}>;
export type GetWorkspaceProps = Merge<DefaultApiGetWorkspaceRequest, {}>;
export type ListWorkspaceUsagesProps = Merge<DefaultApiListWorkspaceUsagesRequest, {}>;
export type BreakDownWorkspaceUsageByBotProps = Merge<DefaultApiBreakDownWorkspaceUsageByBotRequest, {}>;
export type GetWorkspaceQuotaProps = Merge<DefaultApiGetWorkspaceQuotaRequest, {}>;
export type ListWorkspaceQuotasProps = Merge<DefaultApiListWorkspaceQuotasRequest, {}>;
export type UpdateWorkspaceProps = Merge<Except<DefaultApiUpdateWorkspaceRequest, 'updateWorkspaceBody'>, NonNullable<DefaultApiUpdateWorkspaceRequest['updateWorkspaceBody']>>;
export type CheckHandleAvailabilityProps = Merge<Except<DefaultApiCheckHandleAvailabilityRequest, 'checkHandleAvailabilityBody'>, NonNullable<DefaultApiCheckHandleAvailabilityRequest['checkHandleAvailabilityBody']>>;
export type ListWorkspacesProps = Merge<DefaultApiListWorkspacesRequest, {}>;
export type ChangeWorkspacePlanProps = Merge<Except<DefaultApiChangeWorkspacePlanRequest, 'changeWorkspacePlanBody'>, NonNullable<DefaultApiChangeWorkspacePlanRequest['changeWorkspacePlanBody']>>;
export type DeleteWorkspaceProps = Merge<DefaultApiDeleteWorkspaceRequest, {}>;
export type GetAuditRecordsProps = Merge<DefaultApiGetAuditRecordsRequest, {}>;
export type ListWorkspaceMembersProps = Merge<DefaultApiListWorkspaceMembersRequest, {}>;
export type DeleteWorkspaceMemberProps = Merge<DefaultApiDeleteWorkspaceMemberRequest, {}>;
export type CreateWorkspaceMemberProps = Merge<Except<DefaultApiCreateWorkspaceMemberRequest, 'createWorkspaceMemberBody'>, NonNullable<DefaultApiCreateWorkspaceMemberRequest['createWorkspaceMemberBody']>>;
export type UpdateWorkspaceMemberProps = Merge<Except<DefaultApiUpdateWorkspaceMemberRequest, 'updateWorkspaceMemberBody'>, NonNullable<DefaultApiUpdateWorkspaceMemberRequest['updateWorkspaceMemberBody']>>;
export type ListIntegrationApiKeysProps = Merge<DefaultApiListIntegrationApiKeysRequest, {}>;
export type CreateIntegrationApiKeyProps = Merge<Except<DefaultApiCreateIntegrationApiKeyRequest, 'createIntegrationApiKeyBody'>, NonNullable<DefaultApiCreateIntegrationApiKeyRequest['createIntegrationApiKeyBody']>>;
export type DeleteIntegrationApiKeyProps = Merge<DefaultApiDeleteIntegrationApiKeyRequest, {}>;
export type CreateIntegrationProps = Merge<Except<DefaultApiCreateIntegrationRequest, 'createIntegrationBody'>, NonNullable<DefaultApiCreateIntegrationRequest['createIntegrationBody']>>;
export type UpdateIntegrationProps = Merge<Except<DefaultApiUpdateIntegrationRequest, 'updateIntegrationBody'>, NonNullable<DefaultApiUpdateIntegrationRequest['updateIntegrationBody']>>;
export type ListIntegrationsProps = Merge<DefaultApiListIntegrationsRequest, {}>;
export type GetIntegrationProps = Merge<DefaultApiGetIntegrationRequest, {}>;
export type GetIntegrationLogsProps = Merge<DefaultApiGetIntegrationLogsRequest, {}>;
export type GetIntegrationByNameProps = Merge<DefaultApiGetIntegrationByNameRequest, {}>;
export type DeleteIntegrationProps = Merge<DefaultApiDeleteIntegrationRequest, {}>;
export type GetUsageProps = Merge<DefaultApiGetUsageRequest, {}>;
export type ListUsageHistoryProps = Merge<DefaultApiListUsageHistoryRequest, {}>;
export type ChangeAISpendQuotaProps = Merge<Except<DefaultApiChangeAISpendQuotaRequest, 'changeAISpendQuotaBody'>, NonNullable<DefaultApiChangeAISpendQuotaRequest['changeAISpendQuotaBody']>>;
export type ListActivitiesProps = Merge<DefaultApiListActivitiesRequest, {}>;
export type IntrospectProps = Merge<Except<DefaultApiIntrospectRequest, 'introspectBody'>, NonNullable<DefaultApiIntrospectRequest['introspectBody']>>;
export type CreateFileProps = Merge<Except<DefaultApiCreateFileRequest, 'createFileBody'>, NonNullable<DefaultApiCreateFileRequest['createFileBody']>>;
export type DeleteFileProps = Merge<DefaultApiDeleteFileRequest, {}>;
export type ListFilesProps = Merge<DefaultApiListFilesRequest, {}>;
export type GetFileMetadataProps = Merge<DefaultApiGetFileMetadataRequest, {}>;
export type GetFileContentProps = Merge<DefaultApiGetFileContentRequest, {}>;
export type UpdateFileMetadataProps = Merge<Except<DefaultApiUpdateFileMetadataRequest, 'updateFileMetadataBody'>, NonNullable<DefaultApiUpdateFileMetadataRequest['updateFileMetadataBody']>>;
export type SearchFilesProps = Merge<DefaultApiSearchFilesRequest, {}>;
export type ListTablesProps = Merge<DefaultApiListTablesRequest, {}>;
export type GetTableProps = Merge<DefaultApiGetTableRequest, {}>;
export type GetOrCreateTableProps = Merge<Except<DefaultApiGetOrCreateTableRequest, 'getOrCreateTableBody'>, NonNullable<DefaultApiGetOrCreateTableRequest['getOrCreateTableBody']>>;
export type CreateTableProps = Merge<Except<DefaultApiCreateTableRequest, 'createTableBody'>, NonNullable<DefaultApiCreateTableRequest['createTableBody']>>;
export type DuplicateTableProps = Merge<Except<DefaultApiDuplicateTableRequest, 'duplicateTableBody'>, NonNullable<DefaultApiDuplicateTableRequest['duplicateTableBody']>>;
export type UpdateTableProps = Merge<Except<DefaultApiUpdateTableRequest, 'updateTableBody'>, NonNullable<DefaultApiUpdateTableRequest['updateTableBody']>>;
export type RenameTableColumnProps = Merge<Except<DefaultApiRenameTableColumnRequest, 'renameTableColumnBody'>, NonNullable<DefaultApiRenameTableColumnRequest['renameTableColumnBody']>>;
export type DeleteTableProps = Merge<DefaultApiDeleteTableRequest, {}>;
export type GetTableRowProps = Merge<DefaultApiGetTableRowRequest, {}>;
export type FindTableRowsProps = Merge<Except<DefaultApiFindTableRowsRequest, 'findTableRowsBody'>, NonNullable<DefaultApiFindTableRowsRequest['findTableRowsBody']>>;
export type CreateTableRowsProps = Merge<Except<DefaultApiCreateTableRowsRequest, 'createTableRowsBody'>, NonNullable<DefaultApiCreateTableRowsRequest['createTableRowsBody']>>;
export type DeleteTableRowsProps = Merge<Except<DefaultApiDeleteTableRowsRequest, 'deleteTableRowsBody'>, NonNullable<DefaultApiDeleteTableRowsRequest['deleteTableRowsBody']>>;
export type UpdateTableRowsProps = Merge<Except<DefaultApiUpdateTableRowsRequest, 'updateTableRowsBody'>, NonNullable<DefaultApiUpdateTableRowsRequest['updateTableRowsBody']>>;
export type UpsertTableRowsProps = Merge<Except<DefaultApiUpsertTableRowsRequest, 'upsertTableRowsBody'>, NonNullable<DefaultApiUpsertTableRowsRequest['upsertTableRowsBody']>>;
export {};
