import { z } from 'zod';
export declare const defaults: {
    readonly text: {
        readonly schema: z.ZodObject<{
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
        }, {
            text: string;
        }>;
    };
    readonly markdown: {
        readonly schema: z.ZodObject<{
            markdown: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            markdown: string;
        }, {
            markdown: string;
        }>;
    };
    readonly image: {
        readonly schema: z.ZodObject<{
            imageUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            imageUrl: string;
        }, {
            imageUrl: string;
        }>;
    };
    readonly audio: {
        readonly schema: z.ZodObject<{
            audioUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            audioUrl: string;
        }, {
            audioUrl: string;
        }>;
    };
    readonly video: {
        readonly schema: z.ZodObject<{
            videoUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            videoUrl: string;
        }, {
            videoUrl: string;
        }>;
    };
    readonly file: {
        readonly schema: z.ZodObject<{
            fileUrl: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            title?: string | undefined;
            fileUrl: string;
        }, {
            title?: string | undefined;
            fileUrl: string;
        }>;
    };
    readonly location: {
        readonly schema: z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodOptional<z.ZodString>;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            title?: string | undefined;
            address?: string | undefined;
            latitude: number;
            longitude: number;
        }, {
            title?: string | undefined;
            address?: string | undefined;
            latitude: number;
            longitude: number;
        }>;
    };
    readonly carousel: {
        readonly schema: z.ZodObject<{
            items: z.ZodArray<z.ZodObject<{
                title: z.ZodString;
                subtitle: z.ZodOptional<z.ZodString>;
                imageUrl: z.ZodOptional<z.ZodString>;
                actions: z.ZodArray<z.ZodObject<{
                    action: z.ZodEnum<["postback", "url", "say"]>;
                    label: z.ZodString;
                    value: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }, {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                imageUrl?: string | undefined;
                subtitle?: string | undefined;
                title: string;
                actions: {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }[];
            }, {
                imageUrl?: string | undefined;
                subtitle?: string | undefined;
                title: string;
                actions: {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }[];
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            items: {
                imageUrl?: string | undefined;
                subtitle?: string | undefined;
                title: string;
                actions: {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }[];
            }[];
        }, {
            items: {
                imageUrl?: string | undefined;
                subtitle?: string | undefined;
                title: string;
                actions: {
                    value: string;
                    action: "postback" | "url" | "say";
                    label: string;
                }[];
            }[];
        }>;
    };
    readonly card: {
        readonly schema: z.ZodObject<{
            title: z.ZodString;
            subtitle: z.ZodOptional<z.ZodString>;
            imageUrl: z.ZodOptional<z.ZodString>;
            actions: z.ZodArray<z.ZodObject<{
                action: z.ZodEnum<["postback", "url", "say"]>;
                label: z.ZodString;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }, {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
        }, {
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
        }>;
    };
    readonly dropdown: {
        readonly schema: z.ZodObject<{
            text: z.ZodString;
            options: z.ZodArray<z.ZodObject<{
                label: z.ZodString;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                label: string;
            }, {
                value: string;
                label: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            text: string;
            options: {
                value: string;
                label: string;
            }[];
        }, {
            text: string;
            options: {
                value: string;
                label: string;
            }[];
        }>;
    };
    readonly choice: {
        readonly schema: z.ZodObject<{
            text: z.ZodString;
            options: z.ZodArray<z.ZodObject<{
                label: z.ZodString;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                label: string;
            }, {
                value: string;
                label: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            text: string;
            options: {
                value: string;
                label: string;
            }[];
        }, {
            text: string;
            options: {
                value: string;
                label: string;
            }[];
        }>;
    };
};
