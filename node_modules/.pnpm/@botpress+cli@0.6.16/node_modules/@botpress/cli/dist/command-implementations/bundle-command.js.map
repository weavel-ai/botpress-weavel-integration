{
  "version": 3,
  "sources": ["../../src/command-implementations/bundle-command.ts"],
  "sourcesContent": ["import chalk from 'chalk'\nimport type commandDefinitions from '../command-definitions'\nimport * as utils from '../utils'\nimport { ProjectCommand } from './project-command'\n\nexport type BundleCommandDefinition = typeof commandDefinitions.bundle\nexport class BundleCommand extends ProjectCommand<BundleCommandDefinition> {\n  public async run(): Promise<void> {\n    const integrationDef = await this.readIntegrationDefinitionFromFS()\n\n    const abs = this.projectPaths.abs\n    const rel = this.projectPaths.rel('workDir')\n\n    const line = this.logger.line()\n\n    const logLevel = this.argv.verbose ? 'info' : 'silent'\n\n    if (integrationDef) {\n      const { name } = integrationDef\n      line.started(`Bundling integration ${chalk.bold(name)}...`)\n    } else {\n      line.started('Bundling bot...')\n    }\n\n    const unixPath = utils.path.toUnix(rel.entryPoint)\n    const importFrom = utils.path.rmExtension(unixPath)\n    const code = `import x from './${importFrom}'; export default x; export const handler = x.handler;`\n\n    const outfile = abs.outFile // TODO: ensure dir exists\n    line.debug(`Writing bundle to ${outfile}`)\n\n    await utils.esbuild.buildCode({\n      code,\n      cwd: abs.workDir,\n      outfile,\n      logLevel,\n      write: true,\n      sourcemap: this.argv.sourceMap,\n    })\n\n    line.success(`Bundle available at ${chalk.grey(rel.outDir)}`)\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,YAAuB;AACvB,6BAA+B;AAGxB,MAAM,sBAAsB,sCAAwC;AAAA,EACzE,MAAa,MAAqB;AAChC,UAAM,iBAAiB,MAAM,KAAK,gCAAgC;AAElE,UAAM,MAAM,KAAK,aAAa;AAC9B,UAAM,MAAM,KAAK,aAAa,IAAI,SAAS;AAE3C,UAAM,OAAO,KAAK,OAAO,KAAK;AAE9B,UAAM,WAAW,KAAK,KAAK,UAAU,SAAS;AAE9C,QAAI,gBAAgB;AAClB,YAAM,EAAE,KAAK,IAAI;AACjB,WAAK,QAAQ,wBAAwB,aAAAA,QAAM,KAAK,IAAI,MAAM;AAAA,IAC5D,OAAO;AACL,WAAK,QAAQ,iBAAiB;AAAA,IAChC;AAEA,UAAM,WAAW,MAAM,KAAK,OAAO,IAAI,UAAU;AACjD,UAAM,aAAa,MAAM,KAAK,YAAY,QAAQ;AAClD,UAAM,OAAO,oBAAoB;AAEjC,UAAM,UAAU,IAAI;AACpB,SAAK,MAAM,qBAAqB,SAAS;AAEzC,UAAM,MAAM,QAAQ,UAAU;AAAA,MAC5B;AAAA,MACA,KAAK,IAAI;AAAA,MACT;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,WAAW,KAAK,KAAK;AAAA,IACvB,CAAC;AAED,SAAK,QAAQ,uBAAuB,aAAAA,QAAM,KAAK,IAAI,MAAM,GAAG;AAAA,EAC9D;AACF;",
  "names": ["chalk"]
}
