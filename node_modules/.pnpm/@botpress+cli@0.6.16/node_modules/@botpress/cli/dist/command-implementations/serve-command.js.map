{
  "version": 3,
  "sources": ["../../src/command-implementations/serve-command.ts"],
  "sourcesContent": ["import type { Bot as BotImpl, Integration as IntegrationImpl } from '@botpress/sdk'\nimport * as fs from 'fs'\nimport type commandDefinitions from '../command-definitions'\nimport * as errors from '../errors'\nimport * as utils from '../utils'\nimport { ProjectCommand } from './project-command'\n\ntype Serveable = BotImpl | IntegrationImpl\n\nexport type ServeCommandDefinition = typeof commandDefinitions.serve\nexport class ServeCommand extends ProjectCommand<ServeCommandDefinition> {\n  public async run(): Promise<void> {\n    const outfile = this.projectPaths.abs.outFile\n    if (!fs.existsSync(outfile)) {\n      throw new errors.NoBundleFoundError()\n    }\n\n    const integrationDef = await this.readIntegrationDefinitionFromFS()\n    if (integrationDef) {\n      // TODO: store secrets in local cache to avoid prompting every time\n      const secretEnvVariables = await this.promptSecrets(integrationDef, this.argv, { formatEnv: true })\n      const nonNullSecretEnvVariables = utils.records.filterValues(secretEnvVariables, utils.guards.is.notNull)\n      for (const [key, value] of Object.entries(nonNullSecretEnvVariables)) {\n        process.env[key] = value\n      }\n    }\n\n    this.logger.log(`Serving ${integrationDef ? 'integration' : 'bot'}...`)\n\n    const { default: serveable } = utils.require.requireJsFile<{ default: Serveable }>(outfile)\n    const server = await serveable.start(this.argv.port)\n\n    await new Promise<void>((resolve, reject) => {\n      server.on('error', reject)\n      server.on('close', resolve)\n    })\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,SAAoB;AAEpB,aAAwB;AACxB,YAAuB;AACvB,6BAA+B;AAKxB,MAAM,qBAAqB,sCAAuC;AAAA,EACvE,MAAa,MAAqB;AAChC,UAAM,UAAU,KAAK,aAAa,IAAI;AACtC,QAAI,CAAC,GAAG,WAAW,OAAO,GAAG;AAC3B,YAAM,IAAI,OAAO,mBAAmB;AAAA,IACtC;AAEA,UAAM,iBAAiB,MAAM,KAAK,gCAAgC;AAClE,QAAI,gBAAgB;AAElB,YAAM,qBAAqB,MAAM,KAAK,cAAc,gBAAgB,KAAK,MAAM,EAAE,WAAW,KAAK,CAAC;AAClG,YAAM,4BAA4B,MAAM,QAAQ,aAAa,oBAAoB,MAAM,OAAO,GAAG,OAAO;AACxG,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,yBAAyB,GAAG;AACpE,gBAAQ,IAAI,OAAO;AAAA,MACrB;AAAA,IACF;AAEA,SAAK,OAAO,IAAI,WAAW,iBAAiB,gBAAgB,UAAU;AAEtE,UAAM,EAAE,SAAS,UAAU,IAAI,MAAM,QAAQ,cAAsC,OAAO;AAC1F,UAAM,SAAS,MAAM,UAAU,MAAM,KAAK,KAAK,IAAI;AAEnD,UAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AAC3C,aAAO,GAAG,SAAS,MAAM;AACzB,aAAO,GAAG,SAAS,OAAO;AAAA,IAC5B,CAAC;AAAA,EACH;AACF;",
  "names": []
}
