"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var command_implementations_exports = {};
__export(command_implementations_exports, {
  default: () => command_implementations_default
});
module.exports = __toCommonJS(command_implementations_exports);
var import_client = require("../api/client");
var import_logger = require("../logger");
var utils = __toESM(require("../utils"));
var import_add_command = require("./add-command");
var bots = __toESM(require("./bot-commands"));
var import_build_command = require("./build-command");
var import_bundle_command = require("./bundle-command");
var import_deploy_command = require("./deploy-command");
var import_dev_command = require("./dev-command");
var import_gen_command = require("./gen-command");
var import_init_command = require("./init-command");
var integrations = __toESM(require("./integration-commands"));
var import_login_command = require("./login-command");
var import_logout_command = require("./logout-command");
var import_read_command = require("./read-command");
var import_serve_command = require("./serve-command");
const getHandler = (cls) => async (argv) => {
  const logger = new import_logger.Logger(argv);
  const prompt = new utils.prompt.CLIPrompt(argv, logger);
  return new cls(import_client.ApiClient, prompt, logger, argv).handler();
};
var command_implementations_default = {
  login: getHandler(import_login_command.LoginCommand),
  logout: getHandler(import_logout_command.LogoutCommand),
  bots: {
    subcommands: {
      create: getHandler(bots.CreateBotCommand),
      get: getHandler(bots.GetBotCommand),
      delete: getHandler(bots.DeleteBotCommand),
      list: getHandler(bots.ListBotsCommand)
    }
  },
  integrations: {
    subcommands: {
      get: getHandler(integrations.GetIntegrationCommand),
      list: getHandler(integrations.ListIntegrationsCommand),
      delete: getHandler(integrations.DeleteIntegrationCommand)
    }
  },
  init: getHandler(import_init_command.InitCommand),
  generate: getHandler(import_gen_command.GenerateCommand),
  bundle: getHandler(import_bundle_command.BundleCommand),
  build: getHandler(import_build_command.BuildCommand),
  read: getHandler(import_read_command.ReadCommand),
  serve: getHandler(import_serve_command.ServeCommand),
  deploy: getHandler(import_deploy_command.DeployCommand),
  add: getHandler(import_add_command.AddCommand),
  dev: getHandler(import_dev_command.DevCommand)
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
//# sourceMappingURL=index.js.map
