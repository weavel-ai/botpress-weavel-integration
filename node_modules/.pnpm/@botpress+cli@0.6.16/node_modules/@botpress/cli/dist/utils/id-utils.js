"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var id_utils_exports = {};
__export(id_utils_exports, {
  isPrefixedULID: () => isPrefixedULID,
  isValidID: () => isValidID
});
module.exports = __toCommonJS(id_utils_exports);
var import_const = require("@bpinternal/const");
var uuid = __toESM(require("uuid"));
const ULID_LENGTH = 26;
function isValidID(id) {
  return isPrefixedULID(id) || uuid.validate(id);
}
function isPrefixedULID(id) {
  const [prefix, identifier] = id.split("_");
  if (!(prefix && identifier)) {
    return false;
  }
  if (!Object.keys(import_const.prefixToObjectMap).includes(prefix)) {
    return false;
  }
  if (identifier.length < ULID_LENGTH) {
    return false;
  }
  return true;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isPrefixedULID,
  isValidID
});
//# sourceMappingURL=id-utils.js.map
