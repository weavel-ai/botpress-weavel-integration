"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to2, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var case_utils_exports = {};
__export(case_utils_exports, {
  is: () => is,
  to: () => to
});
module.exports = __toCommonJS(case_utils_exports);
var import_lodash = __toESM(require("lodash"));
const capitalizeFirstLetter = (text) => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
const splitChar = (char) => (tokens) => tokens.flatMap((token) => token.split(char));
const splitCaseChange = (tokens) => tokens.flatMap((token) => token.split(/(?<=[a-z])(?=[A-Z])/));
const splitTokens = (tokens) => {
  return [splitChar("/"), splitChar("-"), splitChar("_"), splitCaseChange].reduce((acc, step) => step(acc), tokens);
};
const fromTokens = {
  pascalCase: (tokens) => {
    return tokens.map(capitalizeFirstLetter).join("");
  },
  kebabCase: (tokens) => {
    return tokens.map((token) => token.toLowerCase()).join("-");
  },
  snakeCase: (tokens) => {
    return tokens.map((token) => token.toLowerCase()).join("_");
  },
  screamingSnakeCase: (tokens) => {
    return tokens.map((token) => token.toUpperCase()).join("_");
  },
  camelCase: (tokens) => {
    const [first, ...others] = tokens;
    return [first.toLowerCase(), ...others.map(capitalizeFirstLetter)].join("");
  }
};
const to = import_lodash.default.mapValues(fromTokens, (fn) => (text) => {
  const tokens = splitTokens([text]);
  return fn(tokens);
});
const is = import_lodash.default.mapValues(to, (fn) => (text) => {
  const result = fn(text);
  return result === text;
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  is,
  to
});
//# sourceMappingURL=case-utils.js.map
