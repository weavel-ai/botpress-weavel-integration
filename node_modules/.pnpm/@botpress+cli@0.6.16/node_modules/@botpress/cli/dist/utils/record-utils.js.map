{
  "version": 3,
  "sources": ["../../src/utils/record-utils.ts"],
  "sourcesContent": ["export const setNullOnMissingValues = <A, B>(\n  record: Record<string, A> = {},\n  oldRecord: Record<string, B> = {}\n): Record<string, A | null> => {\n  const newRecord: Record<string, A | null> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    newRecord[key] = value\n  }\n\n  for (const value of Object.keys(oldRecord)) {\n    if (!record[value]) {\n      newRecord[value] = null\n    }\n  }\n\n  return newRecord\n}\n\nexport const zipObjects = <A, B>(\n  recordA: Record<string, A>,\n  recordB: Record<string, B>\n): Record<string, [A | null, B | null]> => {\n  const allKeys = new Set([...Object.keys(recordA), ...Object.keys(recordB)])\n  const newRecord: Record<string, [A | null, B | null]> = {}\n\n  for (const key of allKeys) {\n    newRecord[key] = [recordA[key] ?? null, recordB[key] ?? null]\n  }\n\n  return newRecord\n}\n\nexport const mapValues = <A, B>(record: Record<string, A>, fn: (value: A, key: string) => B): Record<string, B> => {\n  const newRecord: Record<string, B> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    newRecord[key] = fn(value, key)\n  }\n\n  return newRecord\n}\n\nexport function filterValues<A, B extends A>(\n  record: Record<string, A>,\n  fn: (value: A, key: string) => value is B\n): Record<string, B>\nexport function filterValues<A, _B extends A>(\n  record: Record<string, A>,\n  fn: (value: A, key: string) => boolean\n): Record<string, A>\nexport function filterValues<A>(record: Record<string, A>, fn: (value: A, key: string) => boolean) {\n  const newRecord: Record<string, A> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    if (fn(value, key)) {\n      newRecord[key] = value\n    }\n  }\n\n  return newRecord\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,yBAAyB,CACpC,SAA4B,CAAC,GAC7B,YAA+B,CAAC,MACH;AAC7B,QAAM,YAAsC,CAAC;AAE7C,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,cAAU,OAAO;AAAA,EACnB;AAEA,aAAW,SAAS,OAAO,KAAK,SAAS,GAAG;AAC1C,QAAI,CAAC,OAAO,QAAQ;AAClB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AACT;AAEO,MAAM,aAAa,CACxB,SACA,YACyC;AACzC,QAAM,UAAU,oBAAI,IAAI,CAAC,GAAG,OAAO,KAAK,OAAO,GAAG,GAAG,OAAO,KAAK,OAAO,CAAC,CAAC;AAC1E,QAAM,YAAkD,CAAC;AAEzD,aAAW,OAAO,SAAS;AACzB,cAAU,OAAO,CAAC,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,IAAI;AAAA,EAC9D;AAEA,SAAO;AACT;AAEO,MAAM,YAAY,CAAO,QAA2B,OAAwD;AACjH,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,cAAU,OAAO,GAAG,OAAO,GAAG;AAAA,EAChC;AAEA,SAAO;AACT;AAUO,SAAS,aAAgB,QAA2B,IAAwC;AACjG,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,QAAI,GAAG,OAAO,GAAG,GAAG;AAClB,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,SAAO;AACT;",
  "names": []
}
