"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var semver_utils_exports = {};
__export(semver_utils_exports, {
  releases: () => releases
});
module.exports = __toCommonJS(semver_utils_exports);
const semverReleases = {
  prerelease: 0,
  prepatch: 1,
  patch: 2,
  preminor: 3,
  minor: 4,
  premajor: 5,
  major: 6
};
var releases;
((releases2) => {
  releases2.eq = (a, b) => semverReleases[a] === semverReleases[b];
  releases2.gt = (a, b) => semverReleases[a] > semverReleases[b];
  releases2.gte = (a, b) => semverReleases[a] >= semverReleases[b];
  releases2.lt = (a, b) => semverReleases[a] < semverReleases[b];
  releases2.lte = (a, b) => semverReleases[a] <= semverReleases[b];
})(releases || (releases = {}));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  releases
});
//# sourceMappingURL=semver-utils.js.map
