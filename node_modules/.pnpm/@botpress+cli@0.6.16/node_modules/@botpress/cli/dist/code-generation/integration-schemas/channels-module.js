"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var channels_module_exports = {};
__export(channels_module_exports, {
  ChannelModule: () => ChannelModule,
  ChannelsModule: () => ChannelsModule,
  MessageModule: () => MessageModule,
  MessagesModule: () => MessagesModule
});
module.exports = __toCommonJS(channels_module_exports);
var import_bluebird = __toESM(require("bluebird"));
var import_utils = require("../../utils");
var import_const = require("../const");
var import_generators = require("../generators");
var import_module = require("../module");
class MessageModule extends import_module.Module {
  static async create(name, message) {
    const schema = message.schema;
    const def = {
      path: `${name}.ts`,
      exportName: import_utils.casing.to.pascalCase(name),
      content: await (0, import_generators.jsonSchemaToTypeScriptType)(schema, name)
    };
    return new MessageModule(def);
  }
}
class MessagesModule extends import_module.ReExportTypeModule {
  static async create(channel) {
    const messages = channel.messages ?? {};
    const messageModules = await import_bluebird.default.map(
      Object.entries(messages),
      ([messageName, message]) => MessageModule.create(messageName, message)
    );
    const inst = new MessagesModule({
      exportName: "Messages"
    });
    inst.pushDep(...messageModules);
    return inst;
  }
}
class ChannelModule extends import_module.Module {
  constructor(messageModules, channel, def) {
    super(def);
    this.messageModules = messageModules;
    this.channel = channel;
  }
  static async create(channelName, channel) {
    const messagesModule = await MessagesModule.create(channel);
    messagesModule.unshift("messages");
    const inst = new ChannelModule(messagesModule, channel, {
      path: import_const.INDEX_FILE,
      exportName: `Channel${import_utils.casing.to.pascalCase(channelName)}`,
      content: ""
    });
    inst.pushDep(messagesModule);
    return inst;
  }
  get content() {
    const { messageModules } = this;
    const messageImport = messageModules.import(this);
    return [
      import_const.GENERATED_HEADER,
      `import { ${messageModules.exports} } from './${messageImport}'`,
      `export * from './${messageImport}'`,
      "",
      `export type ${this.exports} = {`,
      `  messages: ${messageModules.exports}`,
      `  message: ${(0, import_generators.stringifySingleLine)(this.channel.message)}`,
      `  conversation: ${(0, import_generators.stringifySingleLine)(this.channel.conversation)}`,
      "}"
    ].join("\n");
  }
}
class ChannelsModule extends import_module.ReExportTypeModule {
  static async create(channels) {
    const channelModules = await import_bluebird.default.map(Object.entries(channels), async ([channelName, channel]) => {
      const mod = await ChannelModule.create(channelName, channel);
      return mod.unshift(channelName);
    });
    const inst = new ChannelsModule({ exportName: "Channels" });
    inst.pushDep(...channelModules);
    return inst;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ChannelModule,
  ChannelsModule,
  MessageModule,
  MessagesModule
});
//# sourceMappingURL=channels-module.js.map
