{
  "version": 3,
  "sources": ["../../src/code-generation/integration-implementation.ts"],
  "sourcesContent": ["import { GENERATED_HEADER, INDEX_FILE } from './const'\nimport { stringifySingleLine } from './generators'\nimport { ActionsModule } from './integration-schemas/actions-module'\nimport { ChannelsModule } from './integration-schemas/channels-module'\nimport { ConfigurationModule } from './integration-schemas/configuration-module'\nimport { EventsModule } from './integration-schemas/events-module'\nimport { StatesModule } from './integration-schemas/states-module'\nimport { Module, ModuleDef } from './module'\nimport * as types from './typings'\n\nexport class IntegrationImplementationIndexModule extends Module {\n  public static async create(integration: types.IntegrationDefinition): Promise<IntegrationImplementationIndexModule> {\n    const configModule = await ConfigurationModule.create(integration.configuration ?? { schema: {} })\n    configModule.unshift('configuration')\n\n    const actionsModule = await ActionsModule.create(integration.actions ?? {})\n    actionsModule.unshift('actions')\n\n    const channelsModule = await ChannelsModule.create(integration.channels ?? {})\n    channelsModule.unshift('channels')\n\n    const eventsModule = await EventsModule.create(integration.events ?? {})\n    eventsModule.unshift('events')\n\n    const statesModule = await StatesModule.create(integration.states ?? {})\n    statesModule.unshift('states')\n\n    const inst = new IntegrationImplementationIndexModule(\n      integration,\n      configModule,\n      actionsModule,\n      channelsModule,\n      eventsModule,\n      statesModule,\n      {\n        path: INDEX_FILE,\n        exportName: 'Integration',\n        content: '',\n      }\n    )\n\n    inst.pushDep(configModule)\n    inst.pushDep(actionsModule)\n    inst.pushDep(channelsModule)\n    inst.pushDep(eventsModule)\n    inst.pushDep(statesModule)\n    return inst\n  }\n\n  private constructor(\n    private integration: types.IntegrationDefinition,\n    private configModule: ConfigurationModule,\n    private actionsModule: ActionsModule,\n    private channelsModule: ChannelsModule,\n    private eventsModule: EventsModule,\n    private statesModule: StatesModule,\n    def: ModuleDef\n  ) {\n    super(def)\n  }\n\n  public override get content(): string {\n    let content = GENERATED_HEADER\n\n    const { configModule, actionsModule, channelsModule, eventsModule, statesModule, integration } = this\n\n    const configImport = configModule.import(this)\n    const actionsImport = actionsModule.import(this)\n    const channelsImport = channelsModule.import(this)\n    const eventsImport = eventsModule.import(this)\n    const statesImport = statesModule.import(this)\n\n    content += [\n      GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      '',\n      `import type * as ${configModule.name} from \"./${configImport}\"`,\n      `import type * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `import type * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `import type * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `import type * as ${statesModule.name} from \"./${statesImport}\"`,\n      `export * as ${configModule.name} from \"./${configImport}\"`,\n      `export * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `export * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `export * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `export * as ${statesModule.name} from \"./${statesImport}\"`,\n      '',\n      'type TIntegration = {',\n      `  name: \"${integration.name}\"`,\n      `  version: \"${integration.version}\"`,\n      `  configuration: ${configModule.name}.${configModule.exports}`,\n      `  actions: ${actionsModule.name}.${actionsModule.exports}`,\n      `  channels: ${channelsModule.name}.${channelsModule.exports}`,\n      `  events: ${eventsModule.name}.${eventsModule.exports}`,\n      `  states: ${statesModule.name}.${statesModule.exports}`,\n      `  user: ${stringifySingleLine(integration.user)}`,\n      '}',\n      '',\n      'export type IntegrationProps = sdk.IntegrationProps<TIntegration>',\n      '',\n      'export class Integration extends sdk.Integration<TIntegration> {}',\n      '',\n      'export type Client = sdk.IntegrationSpecificClient<TIntegration>',\n    ].join('\\n')\n\n    return content\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA6C;AAC7C,wBAAoC;AACpC,4BAA8B;AAC9B,6BAA+B;AAC/B,kCAAoC;AACpC,2BAA6B;AAC7B,2BAA6B;AAC7B,oBAAkC;AAG3B,MAAM,6CAA6C,qBAAO;AAAA,EAuCvD,YACE,aACA,cACA,eACA,gBACA,cACA,cACR,KACA;AACA,UAAM,GAAG;AARD;AACA;AACA;AACA;AACA;AACA;AAAA,EAIV;AAAA,EAhDA,aAAoB,OAAO,aAAyF;AAClH,UAAM,eAAe,MAAM,gDAAoB,OAAO,YAAY,iBAAiB,EAAE,QAAQ,CAAC,EAAE,CAAC;AACjG,iBAAa,QAAQ,eAAe;AAEpC,UAAM,gBAAgB,MAAM,oCAAc,OAAO,YAAY,WAAW,CAAC,CAAC;AAC1E,kBAAc,QAAQ,SAAS;AAE/B,UAAM,iBAAiB,MAAM,sCAAe,OAAO,YAAY,YAAY,CAAC,CAAC;AAC7E,mBAAe,QAAQ,UAAU;AAEjC,UAAM,eAAe,MAAM,kCAAa,OAAO,YAAY,UAAU,CAAC,CAAC;AACvE,iBAAa,QAAQ,QAAQ;AAE7B,UAAM,eAAe,MAAM,kCAAa,OAAO,YAAY,UAAU,CAAC,CAAC;AACvE,iBAAa,QAAQ,QAAQ;AAE7B,UAAM,OAAO,IAAI;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,SAAS;AAAA,MACX;AAAA,IACF;AAEA,SAAK,QAAQ,YAAY;AACzB,SAAK,QAAQ,aAAa;AAC1B,SAAK,QAAQ,cAAc;AAC3B,SAAK,QAAQ,YAAY;AACzB,SAAK,QAAQ,YAAY;AACzB,WAAO;AAAA,EACT;AAAA,EAcA,IAAoB,UAAkB;AACpC,QAAI,UAAU;AAEd,UAAM,EAAE,cAAc,eAAe,gBAAgB,cAAc,cAAc,YAAY,IAAI;AAEjG,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,gBAAgB,cAAc,OAAO,IAAI;AAC/C,UAAM,iBAAiB,eAAe,OAAO,IAAI;AACjD,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,eAAe,aAAa,OAAO,IAAI;AAE7C,eAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA,oBAAoB,aAAa,gBAAgB;AAAA,MACjD,oBAAoB,cAAc,gBAAgB;AAAA,MAClD,oBAAoB,eAAe,gBAAgB;AAAA,MACnD,oBAAoB,aAAa,gBAAgB;AAAA,MACjD,oBAAoB,aAAa,gBAAgB;AAAA,MACjD,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,eAAe,gBAAgB;AAAA,MAC9C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,aAAa,gBAAgB;AAAA,MAC5C;AAAA,MACA;AAAA,MACA,YAAY,YAAY;AAAA,MACxB,eAAe,YAAY;AAAA,MAC3B,oBAAoB,aAAa,QAAQ,aAAa;AAAA,MACtD,cAAc,cAAc,QAAQ,cAAc;AAAA,MAClD,eAAe,eAAe,QAAQ,eAAe;AAAA,MACrD,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,eAAW,uCAAoB,YAAY,IAAI;AAAA,MAC/C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,EAAE,KAAK,IAAI;AAEX,WAAO;AAAA,EACT;AACF;",
  "names": []
}
