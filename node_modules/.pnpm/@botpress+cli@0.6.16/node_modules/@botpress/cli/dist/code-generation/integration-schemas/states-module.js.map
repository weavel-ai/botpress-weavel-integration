{
  "version": 3,
  "sources": ["../../../src/code-generation/integration-schemas/states-module.ts"],
  "sourcesContent": ["import bluebird from 'bluebird'\nimport { casing } from '../../utils'\nimport { jsonSchemaToTypeScriptType } from '../generators'\nimport { Module, ModuleDef, ReExportTypeModule } from '../module'\nimport type * as types from '../typings'\n\nexport class StateModule extends Module {\n  public static async create(name: string, state: types.StateDefinition): Promise<StateModule> {\n    const schema = state.schema\n    const def: ModuleDef = {\n      path: `${name}.ts`,\n      exportName: casing.to.pascalCase(name),\n      content: await jsonSchemaToTypeScriptType(schema, name),\n    }\n    return new StateModule(def)\n  }\n}\n\nexport class StatesModule extends ReExportTypeModule {\n  public static async create(states: Record<string, types.StateDefinition>): Promise<StatesModule> {\n    const stateModules = await bluebird.map(Object.entries(states), async ([stateName, state]) =>\n      StateModule.create(stateName, state)\n    )\n\n    const inst = new StatesModule({\n      exportName: 'States',\n    })\n    inst.pushDep(...stateModules)\n    return inst\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AACrB,mBAAuB;AACvB,wBAA2C;AAC3C,oBAAsD;AAG/C,MAAM,oBAAoB,qBAAO;AAAA,EACtC,aAAoB,OAAO,MAAc,OAAoD;AAC3F,UAAM,SAAS,MAAM;AACrB,UAAM,MAAiB;AAAA,MACrB,MAAM,GAAG;AAAA,MACT,YAAY,oBAAO,GAAG,WAAW,IAAI;AAAA,MACrC,SAAS,UAAM,8CAA2B,QAAQ,IAAI;AAAA,IACxD;AACA,WAAO,IAAI,YAAY,GAAG;AAAA,EAC5B;AACF;AAEO,MAAM,qBAAqB,iCAAmB;AAAA,EACnD,aAAoB,OAAO,QAAsE;AAC/F,UAAM,eAAe,MAAM,gBAAAA,QAAS;AAAA,MAAI,OAAO,QAAQ,MAAM;AAAA,MAAG,OAAO,CAAC,WAAW,KAAK,MACtF,YAAY,OAAO,WAAW,KAAK;AAAA,IACrC;AAEA,UAAM,OAAO,IAAI,aAAa;AAAA,MAC5B,YAAY;AAAA,IACd,CAAC;AACD,SAAK,QAAQ,GAAG,YAAY;AAC5B,WAAO;AAAA,EACT;AACF;",
  "names": ["bluebird"]
}
