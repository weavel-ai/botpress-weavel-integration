{
  "version": 3,
  "sources": ["../../src/code-generation/module.ts"],
  "sourcesContent": ["import { posix as pathlib } from 'path'\nimport * as utils from '../utils'\nimport { GENERATED_HEADER, INDEX_FILE } from './const'\nimport type { File } from './typings'\n\nexport type ModuleDef = File & {\n  exportName: string\n}\n\nexport abstract class Module implements File {\n  private _localDependencies: Module[] = []\n\n  public get path(): string {\n    return this._def.path\n  }\n\n  public get content(): string {\n    return this._def.content\n  }\n\n  public get name(): string {\n    const basename = pathlib.basename(this.path)\n    if (basename === INDEX_FILE) {\n      const dirname = pathlib.basename(pathlib.dirname(this.path))\n      return utils.casing.to.camelCase(dirname)\n    }\n    const withoutExtension = utils.path.rmExtension(basename)\n    return utils.casing.to.camelCase(withoutExtension)\n  }\n\n  public get exports(): string {\n    return this._def.exportName\n  }\n\n  public get deps(): Module[] {\n    return [...this._localDependencies]\n  }\n\n  protected constructor(private _def: ModuleDef) {}\n\n  public pushDep(...dependencies: Module[]): this {\n    this._localDependencies.push(...dependencies)\n    return this\n  }\n\n  public unshift(...basePath: string[]): this {\n    this._def = {\n      ...this._def,\n      path: pathlib.join(...basePath, this._def.path),\n    }\n    this._localDependencies = this._localDependencies.map((d) => d.unshift(...basePath))\n    return this\n  }\n\n  public flatten(): File[] {\n    return [this, ...this._localDependencies.flatMap((d) => d.flatten())]\n  }\n\n  public import(base: Module): string {\n    let relativePath = pathlib.relative(pathlib.dirname(base.path), this.path)\n    relativePath = pathlib.join('.', relativePath)\n    return utils.path.rmExtension(relativePath)\n  }\n}\n\nexport class ReExportTypeModule extends Module {\n  protected constructor(def: { exportName: string }) {\n    super({\n      ...def,\n      path: INDEX_FILE,\n      content: '',\n    })\n  }\n\n  public override get content(): string {\n    let content = GENERATED_HEADER\n    const dependencies = this.deps\n\n    for (const m of dependencies) {\n      const { name } = m\n      const importFrom = m.import(this)\n      content += `import * as ${name} from \"./${importFrom}\";\\n`\n      content += `export * as ${name} from \"./${importFrom}\";\\n`\n    }\n\n    content += '\\n'\n\n    content += `export type ${this.exports} = {\\n`\n    for (const { name, exports } of this.deps) {\n      content += `  ${name}: ${name}.${exports};\\n`\n    }\n    content += '}'\n\n    content += '\\n'\n\n    return content\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC;AACjC,YAAuB;AACvB,mBAA6C;AAOtC,MAAe,OAAuB;AAAA,EA6BjC,YAAoB,MAAiB;AAAjB;AAAA,EAAkB;AAAA,EA5BxC,qBAA+B,CAAC;AAAA,EAExC,IAAW,OAAe;AACxB,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA,EAEA,IAAW,UAAkB;AAC3B,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA,EAEA,IAAW,OAAe;AACxB,UAAM,WAAW,YAAAA,MAAQ,SAAS,KAAK,IAAI;AAC3C,QAAI,aAAa,yBAAY;AAC3B,YAAM,UAAU,YAAAA,MAAQ,SAAS,YAAAA,MAAQ,QAAQ,KAAK,IAAI,CAAC;AAC3D,aAAO,MAAM,OAAO,GAAG,UAAU,OAAO;AAAA,IAC1C;AACA,UAAM,mBAAmB,MAAM,KAAK,YAAY,QAAQ;AACxD,WAAO,MAAM,OAAO,GAAG,UAAU,gBAAgB;AAAA,EACnD;AAAA,EAEA,IAAW,UAAkB;AAC3B,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA,EAEA,IAAW,OAAiB;AAC1B,WAAO,CAAC,GAAG,KAAK,kBAAkB;AAAA,EACpC;AAAA,EAIO,WAAW,cAA8B;AAC9C,SAAK,mBAAmB,KAAK,GAAG,YAAY;AAC5C,WAAO;AAAA,EACT;AAAA,EAEO,WAAW,UAA0B;AAC1C,SAAK,OAAO;AAAA,MACV,GAAG,KAAK;AAAA,MACR,MAAM,YAAAA,MAAQ,KAAK,GAAG,UAAU,KAAK,KAAK,IAAI;AAAA,IAChD;AACA,SAAK,qBAAqB,KAAK,mBAAmB,IAAI,CAAC,MAAM,EAAE,QAAQ,GAAG,QAAQ,CAAC;AACnF,WAAO;AAAA,EACT;AAAA,EAEO,UAAkB;AACvB,WAAO,CAAC,MAAM,GAAG,KAAK,mBAAmB,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EACtE;AAAA,EAEO,OAAO,MAAsB;AAClC,QAAI,eAAe,YAAAA,MAAQ,SAAS,YAAAA,MAAQ,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI;AACzE,mBAAe,YAAAA,MAAQ,KAAK,KAAK,YAAY;AAC7C,WAAO,MAAM,KAAK,YAAY,YAAY;AAAA,EAC5C;AACF;AAEO,MAAM,2BAA2B,OAAO;AAAA,EACnC,YAAY,KAA6B;AACjD,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AAAA,EAEA,IAAoB,UAAkB;AACpC,QAAI,UAAU;AACd,UAAM,eAAe,KAAK;AAE1B,eAAW,KAAK,cAAc;AAC5B,YAAM,EAAE,KAAK,IAAI;AACjB,YAAM,aAAa,EAAE,OAAO,IAAI;AAChC,iBAAW,eAAe,gBAAgB;AAAA;AAC1C,iBAAW,eAAe,gBAAgB;AAAA;AAAA,IAC5C;AAEA,eAAW;AAEX,eAAW,eAAe,KAAK;AAAA;AAC/B,eAAW,EAAE,MAAM,QAAQ,KAAK,KAAK,MAAM;AACzC,iBAAW,KAAK,SAAS,QAAQ;AAAA;AAAA,IACnC;AACA,eAAW;AAEX,eAAW;AAEX,WAAO;AAAA,EACT;AACF;",
  "names": ["pathlib"]
}
