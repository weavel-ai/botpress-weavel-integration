"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var states_module_exports = {};
__export(states_module_exports, {
  StateModule: () => StateModule,
  StatesModule: () => StatesModule
});
module.exports = __toCommonJS(states_module_exports);
var import_bluebird = __toESM(require("bluebird"));
var import_utils = require("../../utils");
var import_generators = require("../generators");
var import_module = require("../module");
class StateModule extends import_module.Module {
  static async create(name, state) {
    const schema = state.schema;
    const def = {
      path: `${name}.ts`,
      exportName: import_utils.casing.to.pascalCase(name),
      content: await (0, import_generators.jsonSchemaToTypeScriptType)(schema, name)
    };
    return new StateModule(def);
  }
}
class StatesModule extends import_module.ReExportTypeModule {
  static async create(states) {
    const stateModules = await import_bluebird.default.map(
      Object.entries(states),
      async ([stateName, state]) => StateModule.create(stateName, state)
    );
    const inst = new StatesModule({
      exportName: "States"
    });
    inst.pushDep(...stateModules);
    return inst;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  StateModule,
  StatesModule
});
//# sourceMappingURL=states-module.js.map
