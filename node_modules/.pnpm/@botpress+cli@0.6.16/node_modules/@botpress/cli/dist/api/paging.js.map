{
  "version": 3,
  "sources": ["../../src/api/paging.ts"],
  "sourcesContent": ["export type PageLister<R extends object> = (t: { nextToken?: string }) => Promise<R & { meta: { nextToken?: string } }>\n\nexport async function listAllPages<R extends object>(lister: PageLister<R>): Promise<R[]>\nexport async function listAllPages<R extends object, M>(lister: PageLister<R>, mapper?: (r: R) => M[]): Promise<M[]>\nexport async function listAllPages<R extends object, M>(lister: PageLister<R>, mapper?: (r: R) => M[]) {\n  let nextToken: string | undefined\n  const all: R[] = []\n\n  do {\n    const { meta, ...r } = await lister({ nextToken })\n    all.push(r as R)\n    nextToken = meta.nextToken\n  } while (nextToken)\n\n  if (!mapper) {\n    return all\n  }\n\n  const mapped: M[] = all.flatMap((r) => mapper(r))\n  return mapped\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,eAAsB,aAAkC,QAAuB,QAAwB;AACrG,MAAI;AACJ,QAAM,MAAW,CAAC;AAElB,KAAG;AACD,UAAM,EAAE,SAAS,EAAE,IAAI,MAAM,OAAO,EAAE,UAAU,CAAC;AACjD,QAAI,KAAK,CAAM;AACf,gBAAY,KAAK;AAAA,EACnB,SAAS;AAET,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AAEA,QAAM,SAAc,IAAI,QAAQ,CAAC,MAAM,OAAO,CAAC,CAAC;AAChD,SAAO;AACT;",
  "names": []
}
