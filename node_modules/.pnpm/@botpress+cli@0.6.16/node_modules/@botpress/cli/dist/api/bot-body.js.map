{
  "version": 3,
  "sources": ["../../src/api/bot-body.ts"],
  "sourcesContent": ["import type * as client from '@botpress/client'\nimport type * as sdk from '@botpress/sdk'\nimport * as utils from '../utils'\n\nexport type CreateBotBody = Parameters<client.Client['createBot']>[0]\nexport type UpdateBotBody = Parameters<client.Client['updateBot']>[0]\n\nexport const prepareCreateBotBody = (bot: sdk.Bot): CreateBotBody => ({\n  ...bot.props,\n  configuration: bot.props.configuration\n    ? {\n        ...bot.props.configuration,\n        schema: utils.schema.mapZodToJsonSchema(bot.props.configuration),\n      }\n    : undefined,\n  events: bot.props.events\n    ? utils.records.mapValues(bot.props.events, (event) => ({\n        ...event,\n        schema: utils.schema.mapZodToJsonSchema(event),\n      }))\n    : undefined,\n  states: bot.props.states\n    ? utils.records.mapValues(bot.props.states, (state) => ({\n        ...state,\n        schema: utils.schema.mapZodToJsonSchema(state),\n      }))\n    : undefined,\n})\n\nexport const prepareUpdateBotBody = (localBot: UpdateBotBody, remoteBot: client.Bot): UpdateBotBody => ({\n  ...localBot,\n  states: utils.records.setNullOnMissingValues(localBot.states, remoteBot.states),\n  recurringEvents: utils.records.setNullOnMissingValues(localBot.recurringEvents, remoteBot.recurringEvents),\n  events: utils.records.setNullOnMissingValues(localBot.events, remoteBot.events),\n  user: {\n    ...localBot.user,\n    tags: utils.records.setNullOnMissingValues(localBot.user?.tags, remoteBot.user?.tags),\n  },\n  conversation: {\n    ...localBot.conversation,\n    tags: utils.records.setNullOnMissingValues(localBot.conversation?.tags, remoteBot.conversation?.tags),\n  },\n  message: {\n    ...localBot.message,\n    tags: utils.records.setNullOnMissingValues(localBot.message?.tags, remoteBot.message?.tags),\n  },\n  integrations: utils.records.setNullOnMissingValues(localBot.integrations, remoteBot.integrations),\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAuB;AAKhB,MAAM,uBAAuB,CAAC,SAAiC;AAAA,EACpE,GAAG,IAAI;AAAA,EACP,eAAe,IAAI,MAAM,gBACrB;AAAA,IACE,GAAG,IAAI,MAAM;AAAA,IACb,QAAQ,MAAM,OAAO,mBAAmB,IAAI,MAAM,aAAa;AAAA,EACjE,IACA;AAAA,EACJ,QAAQ,IAAI,MAAM,SACd,MAAM,QAAQ,UAAU,IAAI,MAAM,QAAQ,CAAC,WAAW;AAAA,IACpD,GAAG;AAAA,IACH,QAAQ,MAAM,OAAO,mBAAmB,KAAK;AAAA,EAC/C,EAAE,IACF;AAAA,EACJ,QAAQ,IAAI,MAAM,SACd,MAAM,QAAQ,UAAU,IAAI,MAAM,QAAQ,CAAC,WAAW;AAAA,IACpD,GAAG;AAAA,IACH,QAAQ,MAAM,OAAO,mBAAmB,KAAK;AAAA,EAC/C,EAAE,IACF;AACN;AAEO,MAAM,uBAAuB,CAAC,UAAyB,eAA0C;AAAA,EACtG,GAAG;AAAA,EACH,QAAQ,MAAM,QAAQ,uBAAuB,SAAS,QAAQ,UAAU,MAAM;AAAA,EAC9E,iBAAiB,MAAM,QAAQ,uBAAuB,SAAS,iBAAiB,UAAU,eAAe;AAAA,EACzG,QAAQ,MAAM,QAAQ,uBAAuB,SAAS,QAAQ,UAAU,MAAM;AAAA,EAC9E,MAAM;AAAA,IACJ,GAAG,SAAS;AAAA,IACZ,MAAM,MAAM,QAAQ,uBAAuB,SAAS,MAAM,MAAM,UAAU,MAAM,IAAI;AAAA,EACtF;AAAA,EACA,cAAc;AAAA,IACZ,GAAG,SAAS;AAAA,IACZ,MAAM,MAAM,QAAQ,uBAAuB,SAAS,cAAc,MAAM,UAAU,cAAc,IAAI;AAAA,EACtG;AAAA,EACA,SAAS;AAAA,IACP,GAAG,SAAS;AAAA,IACZ,MAAM,MAAM,QAAQ,uBAAuB,SAAS,SAAS,MAAM,UAAU,SAAS,IAAI;AAAA,EAC5F;AAAA,EACA,cAAc,MAAM,QAAQ,uBAAuB,SAAS,cAAc,UAAU,YAAY;AAClG;",
  "names": []
}
