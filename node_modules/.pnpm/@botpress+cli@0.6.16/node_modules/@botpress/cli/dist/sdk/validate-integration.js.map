{
  "version": 3,
  "sources": ["../../src/sdk/validate-integration.ts"],
  "sourcesContent": ["import type * as sdk from '@botpress/sdk'\nimport * as errors from '../errors'\nimport * as utils from '../utils'\n\nexport const validateIntegrationDefinition = (i: sdk.IntegrationDefinition): void => {\n  const { actions, channels, events, states } = i\n\n  const invalidActionNames = _nonCamelCaseKeys(actions ?? {})\n  if (invalidActionNames.length) {\n    throw new errors.BotpressCLIError(\n      `The following action names are not in camelCase: ${invalidActionNames.join(', ')}`\n    )\n  }\n\n  const invalidChannelNames = _nonCamelCaseKeys(channels ?? {})\n  if (invalidChannelNames.length) {\n    throw new errors.BotpressCLIError(\n      `The following channel names are not in camelCase: ${invalidChannelNames.join(', ')}`\n    )\n  }\n\n  const invalidMessageNames = Object.entries(channels ?? {}).flatMap(([channelName, channel]) =>\n    _nonCamelCaseKeys(channel.messages ?? {}).map((message) => `${channelName}.${message}`)\n  )\n  if (invalidMessageNames.length) {\n    throw new errors.BotpressCLIError(\n      `The following message names are not in camelCase: ${invalidMessageNames.join(', ')}`\n    )\n  }\n\n  const invalidEventNames = _nonCamelCaseKeys(events ?? {})\n  if (invalidEventNames.length) {\n    throw new errors.BotpressCLIError(`The following event names are not in camelCase: ${invalidEventNames.join(', ')}`)\n  }\n\n  const invalidStateNames = _nonCamelCaseKeys(states ?? {})\n  if (invalidStateNames.length) {\n    throw new errors.BotpressCLIError(`The following state names are not in camelCase: ${invalidStateNames.join(', ')}`)\n  }\n}\n\nconst _nonCamelCaseKeys = (obj: Record<string, any>): string[] =>\n  Object.keys(obj).filter((k) => !utils.casing.is.camelCase(k))\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,YAAuB;AAEhB,MAAM,gCAAgC,CAAC,MAAuC;AACnF,QAAM,EAAE,SAAS,UAAU,QAAQ,OAAO,IAAI;AAE9C,QAAM,qBAAqB,kBAAkB,WAAW,CAAC,CAAC;AAC1D,MAAI,mBAAmB,QAAQ;AAC7B,UAAM,IAAI,OAAO;AAAA,MACf,oDAAoD,mBAAmB,KAAK,IAAI;AAAA,IAClF;AAAA,EACF;AAEA,QAAM,sBAAsB,kBAAkB,YAAY,CAAC,CAAC;AAC5D,MAAI,oBAAoB,QAAQ;AAC9B,UAAM,IAAI,OAAO;AAAA,MACf,qDAAqD,oBAAoB,KAAK,IAAI;AAAA,IACpF;AAAA,EACF;AAEA,QAAM,sBAAsB,OAAO,QAAQ,YAAY,CAAC,CAAC,EAAE;AAAA,IAAQ,CAAC,CAAC,aAAa,OAAO,MACvF,kBAAkB,QAAQ,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,GAAG,eAAe,SAAS;AAAA,EACxF;AACA,MAAI,oBAAoB,QAAQ;AAC9B,UAAM,IAAI,OAAO;AAAA,MACf,qDAAqD,oBAAoB,KAAK,IAAI;AAAA,IACpF;AAAA,EACF;AAEA,QAAM,oBAAoB,kBAAkB,UAAU,CAAC,CAAC;AACxD,MAAI,kBAAkB,QAAQ;AAC5B,UAAM,IAAI,OAAO,iBAAiB,mDAAmD,kBAAkB,KAAK,IAAI,GAAG;AAAA,EACrH;AAEA,QAAM,oBAAoB,kBAAkB,UAAU,CAAC,CAAC;AACxD,MAAI,kBAAkB,QAAQ;AAC5B,UAAM,IAAI,OAAO,iBAAiB,mDAAmD,kBAAkB,KAAK,IAAI,GAAG;AAAA,EACrH;AACF;AAEA,MAAM,oBAAoB,CAAC,QACzB,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC;",
  "names": []
}
