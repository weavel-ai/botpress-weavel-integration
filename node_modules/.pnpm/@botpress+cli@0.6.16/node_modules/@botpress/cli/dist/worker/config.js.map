{
  "version": 3,
  "sources": ["../../src/worker/config.ts"],
  "sourcesContent": ["import zod from 'zod'\n\nexport const CONFIG_ENV_KEY = 'CHILD_PROCESS_CONFIGURATION'\n\nexport type Config = zod.infer<typeof configSchema>\nexport const configSchema = zod.union([\n  zod.object({\n    type: zod.literal('code'),\n    code: zod.string(),\n    env: zod.record(zod.string(), zod.string()).optional(),\n  }),\n  zod.object({\n    type: zod.literal('file'),\n    file: zod.string(),\n    env: zod.record(zod.string(), zod.string()).optional(),\n  }),\n])\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAET,MAAM,iBAAiB;AAGvB,MAAM,eAAe,WAAAA,QAAI,MAAM;AAAA,EACpC,WAAAA,QAAI,OAAO;AAAA,IACT,MAAM,WAAAA,QAAI,QAAQ,MAAM;AAAA,IACxB,MAAM,WAAAA,QAAI,OAAO;AAAA,IACjB,KAAK,WAAAA,QAAI,OAAO,WAAAA,QAAI,OAAO,GAAG,WAAAA,QAAI,OAAO,CAAC,EAAE,SAAS;AAAA,EACvD,CAAC;AAAA,EACD,WAAAA,QAAI,OAAO;AAAA,IACT,MAAM,WAAAA,QAAI,QAAQ,MAAM;AAAA,IACxB,MAAM,WAAAA,QAAI,OAAO;AAAA,IACjB,KAAK,WAAAA,QAAI,OAAO,WAAAA,QAAI,OAAO,GAAG,WAAAA,QAAI,OAAO,CAAC,EAAE,SAAS;AAAA,EACvD,CAAC;AACH,CAAC;",
  "names": ["zod"]
}
