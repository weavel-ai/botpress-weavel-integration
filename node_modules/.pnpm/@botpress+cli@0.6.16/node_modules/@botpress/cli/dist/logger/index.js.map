{
  "version": 3,
  "sources": ["../../src/logger/index.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nimport { cursorTo, clearLine } from 'readline'\nimport { BaseLogger, LoggerOptions } from './base-logger'\n\nexport class Logger extends BaseLogger {\n  private static _previousLine: SingleLineLogger | undefined // this is global to the whole process\n\n  protected print(message: string, props: Partial<{ prefix: string; stderr?: boolean }> = {}): void {\n    this.cleanup()\n    const stream = props.stderr ? process.stderr : process.stdout\n    const { prefix } = props\n    if (prefix) {\n      this.render(`${prefix} ${message}\\n`, stream)\n      return\n    }\n    this.render(`${message}\\n`, stream)\n  }\n\n  public line(): SingleLineLogger {\n    this.cleanup()\n    const currentLine = new SingleLineLogger({ ...this.opts })\n    Logger._previousLine = currentLine\n    return currentLine\n  }\n\n  public cleanup(): void {\n    if (Logger._previousLine) {\n      Logger._previousLine.commit()\n      Logger._previousLine = undefined\n    }\n  }\n}\n\nclass SingleLineLogger extends BaseLogger {\n  private _commited = false\n\n  constructor(opts: LoggerOptions) {\n    super(opts)\n  }\n\n  public commit(): void {\n    if (this._commited) {\n      return\n    }\n    this._commited = true\n    console.log()\n  }\n\n  protected print(message: string, props: Partial<{ prefix: string }> = {}): void {\n    if (this._commited) {\n      return\n    }\n\n    clearLine(process.stdout, 0)\n    const { prefix } = props\n    cursorTo(process.stdout, 0)\n    if (prefix) {\n      this.render(`${prefix} ${message}`)\n      return\n    }\n    this.render(message)\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAoC;AACpC,yBAA0C;AAEnC,MAAM,eAAe,8BAAW;AAAA,EACrC,OAAe;AAAA,EAEL,MAAM,SAAiB,QAAuD,CAAC,GAAS;AAChG,SAAK,QAAQ;AACb,UAAM,SAAS,MAAM,SAAS,QAAQ,SAAS,QAAQ;AACvD,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,QAAQ;AACV,WAAK,OAAO,GAAG,UAAU;AAAA,GAAa,MAAM;AAC5C;AAAA,IACF;AACA,SAAK,OAAO,GAAG;AAAA,GAAa,MAAM;AAAA,EACpC;AAAA,EAEO,OAAyB;AAC9B,SAAK,QAAQ;AACb,UAAM,cAAc,IAAI,iBAAiB,EAAE,GAAG,KAAK,KAAK,CAAC;AACzD,WAAO,gBAAgB;AACvB,WAAO;AAAA,EACT;AAAA,EAEO,UAAgB;AACrB,QAAI,OAAO,eAAe;AACxB,aAAO,cAAc,OAAO;AAC5B,aAAO,gBAAgB;AAAA,IACzB;AAAA,EACF;AACF;AAEA,MAAM,yBAAyB,8BAAW;AAAA,EAChC,YAAY;AAAA,EAEpB,YAAY,MAAqB;AAC/B,UAAM,IAAI;AAAA,EACZ;AAAA,EAEO,SAAe;AACpB,QAAI,KAAK,WAAW;AAClB;AAAA,IACF;AACA,SAAK,YAAY;AACjB,YAAQ,IAAI;AAAA,EACd;AAAA,EAEU,MAAM,SAAiB,QAAqC,CAAC,GAAS;AAC9E,QAAI,KAAK,WAAW;AAClB;AAAA,IACF;AAEA,mCAAU,QAAQ,QAAQ,CAAC;AAC3B,UAAM,EAAE,OAAO,IAAI;AACnB,kCAAS,QAAQ,QAAQ,CAAC;AAC1B,QAAI,QAAQ;AACV,WAAK,OAAO,GAAG,UAAU,SAAS;AAClC;AAAA,IACF;AACA,SAAK,OAAO,OAAO;AAAA,EACrB;AACF;",
  "names": []
}
